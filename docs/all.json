{"shell":true,"revision":"f97daab53db29f1cd7ea059a75a785575395c9aa","objects":[{"type":null,"source":"lib/provider.ex:2","object_type":"ModuleObject","moduledoc":"This module provides an implementation of Distilery's configuration provider\nbehavior that changes runtime config tuples for the value.\n\n## Usage\nAdd the following to your `rel/config.exs`\n\n  release :myapp do\n    # ...snip...\n    set config_providers: [\n      ConfigTuples.Provider\n    ]\n  end\n\nThis will result in `ConfigTuples.Provider` being invoked during boot, at which point it\nwill evaluate the current configuration for all the apps and replace the config tuples when needed, persisting it in the configuration.\n\n## Config tuples\n\nThe config tuple always start with `:system`, and can have some options as keyword, the syntax are like this:\n\n- `{:system, env_name}`\n- `{:system, env_name, opts}`\n\nThe available options are:\n- `type`: Type to cast the value, one of `:string`, `:integer`, `:atom`, `:boolean`. Default to `:string`\n- `default`: Default value if the environment variable is not setted. Default no `nil`\n\nFor example:\n- `{:system, \"MYSQL_PORT\", type: :integer, default: 3306}`\n- `{:system, \"ENABLE_LOG\", type: :boolean, default: false}`\n","module":"Elixir.ConfigTuples.Provider","id":"ConfigTuples.Provider"},{"type":"def","source":"lib/provider.ex:38","signature":[["cfg",[],"Elixir"]],"object_type":"FunctionObject","name":"init","module_id":"ConfigTuples.Provider","id":"init/1","doc":false,"arity":1}],"language":"elixir","git_repo_url":"https://github.com/rockneurotiko/config_tuples.git","client_version":"1.0.0","client_name":"inch_ex","branch_name":"master","args":[]}